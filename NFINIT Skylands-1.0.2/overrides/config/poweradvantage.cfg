# Configuration file

options {
    # If true, then plastic will be useable in recipes as if it were rubber (for cross-mod compatibility) [default: true]
    B:plastic_equals_rubber=true

    # NORMAL, APOCALYPTIC, or TECH_PROGRESSION. 
    # Sets the style of recipes used in your game. 
    # In NORMAL mode, everything needed is craftable from vanilla items and the machines are 
    # available pretty much as soon as the player returns from their first mining expedition. 
    # In APOCALYPTIC mode, some important items are not craftable, but can be found in 
    # treasure chests, requiring the players to pillage for their machines. 
    # In TECH_PROGRESSION mode, important items are very complicated to craft using vanilla 
    # items, but are easy to duplicate once they are made. This gives the players a sense of 
    # invention and rising throught the ages from stone-age to space-age. [default: NORMAL]
    S:recipe_mode=NORMAL

    # Controls the rarity of items from this mod being found in treasure chests relative to 
    # the frequency of other chest loot items. Set to 0 to disable metal ingots from 
    # appearing in treasure chests. [range: 0.0 ~ 1000.0, default: 0.5]
    S:treasure_chest_loot_factor=0.5
}


"other power mods" {
    # List of conversions from Power Advantage power types to RF, in units of RF per energy unit [default: steam=8;electricity=0.25;quantum=8]
    S:RF_conversions=steam=8;electricity=0.25;quantum=8

    # If false, then you may have less lag. If true, then some mods that are not Power 
    # Advantage add-ons may be able to draw power from Power Advantage power generators.
    # Note that power converter blocks will still work, even when this option is set to 
    # false. [default: true]
    B:extended_compatibility=true

    # If true, then Power Advantage will use existing fluids added by other mods where possible [default: false]
    B:use_other_fluids=false
}


recipes {
    # List of distiller recipes in the format of #*name1->#*name2 where # is an 
    # integer number and name1 and name2 are the fluid names of the input and 
    # output of the recipe [default: 2*crude_oil->1*refined_oil;2*oil->1*refined_oil]
    S:distiller_recipes=2*crude_oil->1*refined_oil;2*oil->1*refined_oil
}


